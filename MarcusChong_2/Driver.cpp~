#include<iostream>
#include<string>
#include<fstream>
#include <math.h>
#include <cstdlib>
#include "Map.h"


using namespace std;

int main(int argc, char ** argv)
{
	Map grid;
	
	int mapFileOption;
	int rows, columns;
	double population;
	string fileName;
	bool isPopulated;
	mapFileOption = grid.introduction(); // only returns 1 or 2
	
	if(mapFileOption == 1)// provide a mapfile
	{
		fileName = grid.nameOfTxt();
		rows = grid.rowsTxt(fileName);
		columns = grid.columnsTxt(fileName);
		int currentGen[rows][columns];
		int nextGen[rows][columns];
		for (int i = 0; i < rows; ++i)//fill up current map with uploaded mapfile
		{
		
			for(int j = 0; j < columns; ++j)
			{
				
			
				isPopulated = grid.isPopulated(fileName, i, j,rows, columns);
				cout<< isPopulated << endl;
				if(isPopulated == true)
				{
					
					currentGen[i][j] = 1;
					cout << currentGen[i][j] << " ";
				}
				else
				{
					//currentGen[i][j] = 0;
					//cout << currentGen[i][j] << " ";
				}
			}
		}
		 
	}
	
	else if(mapFileOption == 2)// randomized mapfile
	{
		rows = grid.rowsRand();
		columns = grid.columnsRand();
		population = grid.population();
		int curretGen[rows][columns];
		int nextGen[rows][columns];
	}
	
	
	
	
	
	return 0;
}